# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'user.ui'
#
# Created by: PyQt5 UI code generator 5.15.7
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
import mysql.connector as user


class Ui_Form(object):
    def setupUi(self, Form):
        Form.setObjectName("Form")
        Form.resize(608, 467)
        self.tb1 = QtWidgets.QLineEdit(Form)
        self.tb1.setGeometry(QtCore.QRect(170, 200, 351, 21))
        self.tb1.setObjectName("tb1")
        self.lb1 = QtWidgets.QLabel(Form)
        self.lb1.setGeometry(QtCore.QRect(70, 200, 81, 20))
        font = QtGui.QFont()
        font.setFamily("MS Sans Serif")
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.lb1.setFont(font)
        self.lb1.setObjectName("lb1")
        self.pb1 = QtWidgets.QPushButton(Form)
        self.pb1.setGeometry(QtCore.QRect(280, 290, 81, 31))
        self.pb1.setStyleSheet("color: red;")
        self.pb1.setObjectName("pb1")
        self.tb2 = QtWidgets.QLineEdit(Form)
        self.tb2.setGeometry(QtCore.QRect(170, 240, 351, 21))
        self.tb2.setObjectName("tb2")
        self.label = QtWidgets.QLabel(Form)
        self.label.setGeometry(QtCore.QRect(250, 120, 141, 31))
        font = QtGui.QFont()
        font.setFamily("Times New Roman")
        font.setPointSize(20)
        font.setBold(True)
        font.setWeight(75)
        self.label.setFont(font)
        self.label.setObjectName("label")
        self.lb2 = QtWidgets.QLabel(Form)
        self.lb2.setGeometry(QtCore.QRect(70, 240, 81, 20))
        font = QtGui.QFont()
        font.setFamily("MS Sans Serif")
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.lb2.setFont(font)
        self.lb2.setObjectName("lb2")
        self.pb3.clicked.connect(self.update)

        self.retranslateUi(Form)
        QtCore.QMetaObject.connectSlotsByName(Form)

    def user(self):

            db=user.connect(
                    host="localhost",
                    user="root",
                    password="",
                    database="register"    
            )
            mycursor=db.cursor()   
            name=self.tb1.text()
            email=self.tb2.text()

            query="SELECT * FROM admin WHERE email=%s AND Password=%s"
            value=(name,email)
            mycursor.execute(query,value)
            harsh= mycursor.fetchall()
        
            if (len(harsh))>0:
                    print("user found")
                    
            else:            
                    print("user not found")

    def update(self):
            
          
                db=user.connect(
                    host="localhost",
                    user="root",
                    password="",
                    database="register"  
                    
                )
                
                mycursor=db.cursor()
                name=self.tb1.text()
                email=self.tb2.text()
                updateq="UPDATE admin SET email=%s WHERE Password=%s"
                value=(name,email)
                 
                try:
                    mycursor.execute(updateq, value)
                    db.commit()
                    print("success")
                except:
                    print("failed")
                        
                  
    def retranslateUi(self, Form):
        _translate = QtCore.QCoreApplication.translate
        Form.setWindowTitle(_translate("Form", "Form"))
        self.lb1.setText(_translate("Form", "Name"))
        self.pb1.setText(_translate("Form", "Submit"))
        self.label.setText(_translate("Form", "User Details"))
        self.lb2.setText(_translate("Form", "Email"))

if __name__ == "_main_":
        import sys
        app=QtWidgets.QApplication(sys.argv)
        Form=QtWidgets.QWidget()
        ui = Ui_Form()
        ui.setupUi(Form)
        Form.show()
        sys.exit(app.exec_())